{"version":3,"sources":["components/Places.js","components/Weather.js","components/PlaceInfo.js","App.js","index.js"],"names":["Places","handleClick","className","map","place","i","onClick","style","background","replace","Weather","props","useEffect","fetch","then","response","json","myWeather","setWeather","useState","weather","main","Math","round","temp","description","PlaceInfo","info","setinfo","query","pages","Object","keys","extract","App","setPlace","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAkBeA,EAjBA,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAGb,OACI,qBAAKC,UAAU,SAAf,SAHW,CAAC,WAAY,QAAS,gBAAiB,cAAe,WAIzDC,KAAI,SAACC,EAAOC,GAChB,OACI,qBAAKC,QAAS,kBAAML,EAAYG,IAAQF,UAAU,QAAgBK,MAAO,CAACC,WAAY,cAAgBJ,EAAMK,QAAQ,OAAQ,IAAM,gCAAlI,SACI,oBAAIP,UAAU,aAAd,SAA4BE,KAD+BC,SCmChEK,EAvCC,SAACC,GAEXC,qBAAU,WAEAD,EAAMP,OACVS,MAAM,qDAAD,OAAsDF,EAAMP,MAA5D,4CACAU,MAAK,SAASC,GACf,OAAOA,EAASC,UAEfF,MAAK,SAASG,GACfC,EAAWD,QAKnB,CAACN,IAEH,MAA8BQ,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBF,EAAhB,KAEA,OAAIE,EAAQC,KAEJ,sBAAKnB,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,6BACA,mBAAGA,UAAU,OAAb,SAAqBoB,KAAKC,MAAMH,EAAQC,KAAKG,KAAO,QAAU,WAC9D,mBAAGtB,UAAU,OAAb,SAAqBkB,EAAQA,QAAQ,GAAGK,iBAK9C,sBAAKvB,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,6BACA,mBAAGA,UAAU,SACb,mBAAGA,UAAU,aCSdwB,EAzCG,SAACf,GAEf,MAAwBQ,mBAAS,IAAjC,mBAAOQ,EAAP,KAAaC,EAAb,KAmBA,OAjBAhB,qBAAU,WAEFD,EAAMP,OACVS,MAAM,6HAAD,OAA8HF,EAAMP,QACpIU,MAAK,SAASC,GACf,OAAOA,EAASC,UAEfF,MAAK,SAASa,GACfC,EAAQD,QAKd,CAAChB,IAICgB,EAAKE,MAED,sBAAK3B,UAAU,UAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BS,EAAMP,QACpC,mBAAGF,UAAU,cAAb,SAA4ByB,EAAKE,MAAMC,MAAMC,OAAOC,KAAKL,EAAKE,MAAMC,OAAO,IAAIG,UAC/E,yBAKJ,sBAAK/B,UAAU,UAAf,UACI,oBAAIA,UAAU,eAAd,4BACA,mBAAGA,UAAU,cAAb,4CACA,0BCfDgC,EAdH,WACV,MAA0Bf,mBAAS,IAAnC,mBAAOf,EAAP,KAAc+B,EAAd,KAEA,OACE,qCACE,cAAC,EAAD,CAAQlC,YAAakC,IACrB,sBAAKjC,UAAU,YAAf,UACE,cAAC,EAAD,CAAWE,MAAOA,IAClB,cAAC,EAAD,CAASA,MAAOA,WCbxBgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.238590af.chunk.js","sourcesContent":["//Creates the city directory\r\nconst Places = ({handleClick}) => {\r\n    const Cities = [\"Edmonton\", \"Tokyo\", \"New York City\", \"Los Angeles\", \"Mykonos\"];\r\n\r\n    return (\r\n        <div className=\"cities\">\r\n        {Cities.map((place, i) => {\r\n            return (\r\n                <div onClick={() => handleClick(place)} className=\"place\" key={i} style={{background: 'url(../img/' + place.replace(/\\s+/g, '') + '.jpg) center/cover no-repeat'}}>\r\n                    <h2 className=\"placeTitle\">{place}</h2>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Places","//Get the current weather for the selected city\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Weather = (props) => {\r\n    \r\n      useEffect(()=>{\r\n        const getWeather = () => {\r\n            if (props.place) {\r\n            fetch(`https://api.openweathermap.org/data/2.5/weather?q=${props.place}&appid=a7410da00e5141746d511f305afc33ee`)\r\n                .then(function(response){\r\n                return response.json();\r\n                })\r\n                .then(function(myWeather) {\r\n                setWeather(myWeather)\r\n                });\r\n            }\r\n        };\r\n        getWeather()\r\n      },[props])\r\n\r\n      const [weather, setWeather] = useState([])\r\n\r\n      if (weather.main) {\r\n          return (\r\n              <div className=\"weatherInfo\">\r\n                  <h2 className=\"weatherTitle\">Current Weather</h2>\r\n                  <p className=\"temp\">{Math.round(weather.main.temp - 273.15) + 'Â° C'}</p>\r\n                  <p className=\"desc\">{weather.weather[0].description}</p>\r\n              </div>\r\n          )\r\n      } else {\r\n          return (\r\n            <div className=\"weatherInfo\">\r\n                <h2 className=\"weatherTitle\">Current Weather</h2>\r\n                <p className=\"temp\"></p>\r\n                <p className=\"desc\"></p>\r\n            </div>\r\n          )\r\n      }\r\n\r\n}\r\n\r\nexport default Weather","//Get the summary paragraph from Wikipedia for the selected city and then display the city info\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst PlaceInfo = (props) => {\r\n\r\n    const [info, setinfo] = useState([])\r\n    \r\n    useEffect(()=>{\r\n    const getInfo = () => {\r\n        if (props.place) {\r\n        fetch(`https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro&explaintext&redirects=1&origin=*&titles=${props.place}`)\r\n            .then(function(response){\r\n            return response.json();\r\n            })\r\n            .then(function(info) {\r\n            setinfo(info)\r\n            });\r\n        }\r\n    };\r\n    getInfo()\r\n    },[props])\r\n\r\n    \r\n\r\n    if (info.query) {\r\n        return (\r\n            <div className=\"excerpt\">\r\n                <h2 className=\"excerptTitle\">{props.place}</h2>\r\n                <p className=\"excerptInfo\">{info.query.pages[Object.keys(info.query.pages)[0]].extract}</p>\r\n                <p></p>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"excerpt\">\r\n                <h2 className=\"excerptTitle\">Travel Planner</h2>\r\n                <p className=\"excerptInfo\">Click on a city to learn more!</p>\r\n                <p></p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default PlaceInfo","import {useState} from \"react\";\n\nimport './App.css';\nimport './minireset.css';\n\nimport Places from './components/Places.js';\nimport Weather from './components/Weather.js';\nimport PlaceInfo from './components/PlaceInfo.js';\n\nconst App = () => {\n  const [place, setPlace] = useState([]);\n\n  return (\n    <>\n      <Places handleClick={setPlace} />\n      <div className=\"placeInfo\">\n        <PlaceInfo place={place}/>\n        <Weather place={place}/>\n      </div>\n    </>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}